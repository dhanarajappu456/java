


//eg 1 :

//handson  
public enum Color {
    RED(1),
    BLUE(2),
    GREEN(3);

    private final int value;

    Color(int value) {
        this.value = value;
    }

    public int getValue() {
        return this.value;
    }

    public static void main(String[] args) {
        // Print all colors and their values
        for (Color color : Color.values()) {
            System.out.println(color + ": " + color.getValue());
        }
        
        // Print a specific color
        System.out.println(Color.RED);
        
        // Print the name of a specific color
        System.out.println(Color.RED.name());

        // Print the value of a specific color
        System.out.println(Color.RED.getValue());

        // Print the number of colors
        System.out.println(Color.values().length);
    }
}


//eg~:2


public class Main {
    public enum Day {
        SUNDAY, MONDAY, TUESDAY, WEDNESDAY,
        THURSDAY, FRIDAY, SATURDAY 
    }

    public static void main(String[] args) {
        Day today = Day.MONDAY;

        if (today == Day.MONDAY) {
            System.out.println("Today is Monday!");
        }
        
        // You can also loop through all the values
        for (Day day : Day.values()) {
            System.out.println(day);
        }
    }
}

//eg~:3 
/*

eums can be dedined inside class /  interface, but not inside,  a method

*/

public enum Day {
    SUNDAY("Sunday"),
    MONDAY("Monday"),
    TUESDAY("Tuesday"),
    WEDNESDAY("Wednesday"),
    THURSDAY("Thursday"),
    FRIDAY("Friday"),
    SATURDAY("Saturday");

    private String dayName;

    Day(String dayName) {
        this.dayName = dayName;
    }

    public String getDayName() {
        return this.dayName;
    }
}

public class Main {
    public static void main(String[] args) {
        for (Day day : Day.values()) {
            System.out.println(day.getDayName());
        }
    }
}



