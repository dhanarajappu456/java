https://www.geeksforgeeks.org/different-ways-to-create-the-instances-of-wrapper-classes-in-java/?ref=lbp



wrapper object can be created using three ways:


Using the constructor of the wrapper class   - the refercne will be differnt for different objects , even if the value of the argument is same 
Using the valueOf() method provided by the Wrapper classes   - the referece point to same location if the value of the argument passed is same for both object 
Using concept of AutoBoxing

//diff between wrapper object created with valueOf and  wrapper constructr



// Importing input output classes
import java.io.*;

// Main class
class GFG {

	// Main driver method
	public static void main (String[] args) {

		// Creating and initializing two integer numbers
		// Value is passed as an argument to which it is initialized
		
		// Custom entries
		// Number 1 where N = 5
		Integer num1 = new Integer(5);
		// Number 2 where N = 5
		Integer num2 = new Integer(5);
		
		// Creating objects of Integer class
		// using valueOf() method
	
		// Again, creating and initializing two integer numbers
		// Value is passed as an argument to which it is initialized
		Integer num3 = Integer.valueOf(5);
		Integer num4 = Integer.valueOf(5);
		

		// Now by far, all the objects contain the same value
		// N = 5
		
		// Boolean will return true if numbers are equal
		// else returning false

		// Comparing two numbers
		boolean value1 = (num1 == num2);
		boolean value2 = (num3 == num4);
		
		// Print and display the bool results
		System.out.println(value1);  // return false 
		System.out.println(value2);  // returns true
	}
}

this behaviour is almost same for all the wrappers except flodt and double 
